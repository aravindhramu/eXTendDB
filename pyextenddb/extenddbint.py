# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_extenddbint', [dirname(__file__)])
        except ImportError:
            import _extenddbint
            return _extenddbint
        if fp is not None:
            try:
                _mod = imp.load_module('_extenddbint', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _extenddbint = swig_import_helper()
    del swig_import_helper
else:
    import _extenddbint
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


XTDB_OK = _extenddbint.XTDB_OK
XTDB_NO_MEM = _extenddbint.XTDB_NO_MEM
XTDB_INVALID_BSON = _extenddbint.XTDB_INVALID_BSON
XTDB_NIN_REQUIRES_ARRAY = _extenddbint.XTDB_NIN_REQUIRES_ARRAY
XTDB_IN_REQUIRES_ARRAY = _extenddbint.XTDB_IN_REQUIRES_ARRAY
XTDB_ALL_REQUIRES_ARRAY = _extenddbint.XTDB_ALL_REQUIRES_ARRAY
XTDB_IO_ERR = _extenddbint.XTDB_IO_ERR
XTDB_FILE_NOT_FOUND = _extenddbint.XTDB_FILE_NOT_FOUND
XTDB_MAIN_DB_NOT_FOUND = _extenddbint.XTDB_MAIN_DB_NOT_FOUND
XTDB_DESC_NOT_FOUND = _extenddbint.XTDB_DESC_NOT_FOUND
XTDB_INDEX_NOT_FOUND = _extenddbint.XTDB_INDEX_NOT_FOUND
XTDB_DB_OPEN_FAILED = _extenddbint.XTDB_DB_OPEN_FAILED
XTDB_INDEX_EXISTS = _extenddbint.XTDB_INDEX_EXISTS
XTDB_NO_ENTRY = _extenddbint.XTDB_NO_ENTRY
XTDB_ENTRY_EXISTS = _extenddbint.XTDB_ENTRY_EXISTS
XTDB_CORRUPT_DB = _extenddbint.XTDB_CORRUPT_DB
XTDB_NO_SPACE = _extenddbint.XTDB_NO_SPACE
XTDB_PERM_DENIED = _extenddbint.XTDB_PERM_DENIED
XTDB_INVALID_CURSOR = _extenddbint.XTDB_INVALID_CURSOR
XTDB_MIX_MOD_NONMOD_OP = _extenddbint.XTDB_MIX_MOD_NONMOD_OP
XTDB_INVALID_OBJ_MOD = _extenddbint.XTDB_INVALID_OBJ_MOD
XTDB_MOD_SHOULD_BE_OBJ = _extenddbint.XTDB_MOD_SHOULD_BE_OBJ
XTDB_INVALID_INPUT = _extenddbint.XTDB_INVALID_INPUT
XTDB_CANNOT_MODIFY_ID = _extenddbint.XTDB_CANNOT_MODIFY_ID
XTDB_MOD_ERR = _extenddbint.XTDB_MOD_ERR
XTDB_OTHER_ERR = _extenddbint.XTDB_OTHER_ERR
class XTDBErrDesc(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XTDBErrDesc, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XTDBErrDesc, name)
    __repr__ = _swig_repr
    __swig_setmethods__["errnum"] = _extenddbint.XTDBErrDesc_errnum_set
    __swig_getmethods__["errnum"] = _extenddbint.XTDBErrDesc_errnum_get
    if _newclass:errnum = _swig_property(_extenddbint.XTDBErrDesc_errnum_get, _extenddbint.XTDBErrDesc_errnum_set)
    __swig_setmethods__["errString"] = _extenddbint.XTDBErrDesc_errString_set
    __swig_getmethods__["errString"] = _extenddbint.XTDBErrDesc_errString_get
    if _newclass:errString = _swig_property(_extenddbint.XTDBErrDesc_errString_get, _extenddbint.XTDBErrDesc_errString_set)
    def __init__(self): 
        this = _extenddbint.new_XTDBErrDesc()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _extenddbint.delete_XTDBErrDesc
    __del__ = lambda self : None;
XTDBErrDesc_swigregister = _extenddbint.XTDBErrDesc_swigregister
XTDBErrDesc_swigregister(XTDBErrDesc)


def XTDBGetErrString(*args):
  return _extenddbint.XTDBGetErrString(*args)
XTDBGetErrString = _extenddbint.XTDBGetErrString

def XTDBInitHandle(*args):
  return _extenddbint.XTDBInitHandle(*args)
XTDBInitHandle = _extenddbint.XTDBInitHandle

def XTDBFreeHandle(*args):
  return _extenddbint.XTDBFreeHandle(*args)
XTDBFreeHandle = _extenddbint.XTDBFreeHandle

def XTDBCreateIndex(*args):
  return _extenddbint.XTDBCreateIndex(*args)
XTDBCreateIndex = _extenddbint.XTDBCreateIndex

def XTDBDropIndex(*args):
  return _extenddbint.XTDBDropIndex(*args)
XTDBDropIndex = _extenddbint.XTDBDropIndex

def XTDBDrop(*args):
  return _extenddbint.XTDBDrop(*args)
XTDBDrop = _extenddbint.XTDBDrop

def XTDBSync(*args):
  return _extenddbint.XTDBSync(*args)
XTDBSync = _extenddbint.XTDBSync

def XTDBInsert(*args):
  return _extenddbint.XTDBInsert(*args)
XTDBInsert = _extenddbint.XTDBInsert

def XTDBFind(*args):
  return _extenddbint.XTDBFind(*args)
XTDBFind = _extenddbint.XTDBFind

def XTDBCursorNext(*args):
  return _extenddbint.XTDBCursorNext(*args)
XTDBCursorNext = _extenddbint.XTDBCursorNext

def XTDBCursorFree(*args):
  return _extenddbint.XTDBCursorFree(*args)
XTDBCursorFree = _extenddbint.XTDBCursorFree

def XTDBUpdate(*args):
  return _extenddbint.XTDBUpdate(*args)
XTDBUpdate = _extenddbint.XTDBUpdate

def XTDBRemove(*args):
  return _extenddbint.XTDBRemove(*args)
XTDBRemove = _extenddbint.XTDBRemove

def XTDBCount(*args):
  return _extenddbint.XTDBCount(*args)
XTDBCount = _extenddbint.XTDBCount

def XTDBGetLastErrorBson(*args):
  return _extenddbint.XTDBGetLastErrorBson(*args)
XTDBGetLastErrorBson = _extenddbint.XTDBGetLastErrorBson
# This file is compatible with both classic and new-style classes.


